package com.zongteng.ztetl.etl.dw.dim

import com.zongteng.ztetl.common.{Dw_dim_common, SystemCodeUtil}
import com.zongteng.ztetl.util.DateUtil

object DimFeeType {

  private val task = "Spark_Etl_Dim_Fee_Type"

  private val tableName = "dim_fee_type"

  private val nowDate: String = DateUtil.getNowTime()

  private val zy_wms = "SELECT \n" +
    " row_wid AS row_wid,\n" +
    " date_format(current_date(), 'yyyyMMdd') AS etl_proc_wid,\n" +
    " current_timestamp ( ) AS w_insert_dt,\n" +
    " current_timestamp ( ) AS w_update_dt,\n" +
    " datasource_num_id AS datasource_num_id,\n" +
    " data_flag AS data_flag,\n" +
    " ft_id AS integration_id,\n" +
    " created_on_dt AS created_on_dt,\n" +
    " changed_on_dt AS changed_on_dt,\n" +
    "\n" +
    " ft_id AS ft_id,\n" +
    " ft_code AS ft_code,\n" +
    " ft_name_en AS ft_name_en,\n" +
    " ft_name_cn AS ft_name_cn,\n" +
    " ft_note AS ft_note,\n" +
    " ft_type AS ft_type,\n" +
    " ft_add_time AS ft_add_time,\n" +
    " ft_update_time AS ft_update_time,\n" +
    " NULL AS ft_tms_id,\n" +
    " NULL AS ft_group_id,\n" +
    " NULL AS ft_last_update_time,\n" +
    " NULL AS ft_serverbill_printed,\n" +
    " NULL AS ft_group_code,\n" +
    " NULL AS ft_group_name,\n" +
    " NULL AS ft_group_ename,\n" +
    " NULL AS ft_group_remark,\n" +
    " NULL AS ft_group_tms_id,\n" +
    " NULL AS ft_group_last_update_time\n" +
    s"FROM (SELECT * FROM ods.zy_wms_fee_type WHERE day = '$nowDate') ft"

  private val gc_wms = "SELECT \n" +
    " row_wid AS row_wid,\n" +
    " date_format(current_date(), 'yyyyMMdd') AS etl_proc_wid,\n" +
    " current_timestamp ( ) AS w_insert_dt,\n" +
    " current_timestamp ( ) AS w_update_dt,\n" +
    " datasource_num_id AS datasource_num_id,\n" +
    " data_flag AS data_flag,\n" +
    " ft_id AS integration_id,\n" +
    " created_on_dt AS created_on_dt,\n" +
    " changed_on_dt AS changed_on_dt,\n" +
    "\n" +
    " ft_id AS ft_id,\n" +
    " ft_code AS ft_code,\n" +
    " ft_name_en AS ft_name_en,\n" +
    " ft_name_cn AS ft_name_cn,\n" +
    " ft_note AS ft_note,\n" +
    " ft_type AS ft_type,\n" +
    " ft_add_time AS ft_add_time,\n" +
    " ft_update_time AS ft_update_time,\n" +
    " NULL AS ft_tms_id,\n" +
    " NULL AS ft_group_id,\n" +
    " NULL AS ft_last_update_time,\n" +
    " NULL AS ft_serverbill_printed,\n" +
    " NULL AS ft_group_code,\n" +
    " NULL AS ft_group_name,\n" +
    " NULL AS ft_group_ename,\n" +
    " NULL AS ft_group_remark,\n" +
    " NULL AS ft_group_tms_id,\n" +
    " NULL AS ft_group_last_update_time\n" +
    s"FROM (SELECT * FROM ods.gc_wms_fee_type WHERE day = '$nowDate') ft"

  private val gc_tcms = "SELECT \n" +
    " ft.row_wid AS row_wid,\n" +
    " date_format(current_date(), 'yyyyMMdd') AS etl_proc_wid,\n" +
    " current_timestamp ( ) AS w_insert_dt,\n" +
    " current_timestamp ( ) AS w_update_dt,\n" +
    " ft.datasource_num_id AS datasource_num_id,\n" +
    " ft.data_flag AS data_flag,\n" +
    " ft.fk_id AS integration_id,\n" +
    " ft.created_on_dt AS created_on_dt,\n" +
    " ft.changed_on_dt AS changed_on_dt,\n" +
    "\n" +
    " ft.fk_id AS ft_id,\n" +
    " ft.fk_code AS ft_code,\n" +
    " ft.fk_ename AS ft_name_en,\n" +
    " ft.fk_name AS ft_name_cn,\n" +
    " ft.fk_note AS ft_note,\n" +
    " ft.fk_type AS ft_type,\n" +
    " NULL AS ft_add_time,\n" +
    " NULL AS ft_update_time,\n" +
    " ft.tms_id AS ft_tms_id,\n" +
    " ft.group_id AS ft_group_id,\n" +
    " ft.last_update_time AS ft_last_update_time,\n" +
    " ft.serverbill_printed AS ft_serverbill_printed,\n" +
    " ftg.group_code AS ft_group_code,\n" +
    " ftg.group_name AS ft_group_name,\n" +
    " ftg.group_ename AS ft_group_ename,\n" +
    " ftg.group_remark AS ft_group_remark,\n" +
    " ftg.tms_id AS ft_group_tms_id,\n" +
    " ftg.last_update_time AS ft_group_last_update_time\n" +
    s"FROM (SELECT * FROM ods.gc_tcms_xtd_customer_feekind WHERE day = '$nowDate') ft\n" +
    s"LEFT JOIN (SELECT * FROM ods.gc_tcms_xtd_customer_feekind_group WHERE day = '$nowDate') ftg\n" +
    "ON ft.group_id = ftg.group_id"

  def main(args: Array[String]): Unit = {
    Dw_dim_common.getRunCode_full(
      task,
      tableName,
      Array(zy_wms, gc_wms, gc_tcms),
      Array(SystemCodeUtil.ZY_WMS, SystemCodeUtil.GC_WMS, SystemCodeUtil.GC_TCMS)
    )
  }




}
