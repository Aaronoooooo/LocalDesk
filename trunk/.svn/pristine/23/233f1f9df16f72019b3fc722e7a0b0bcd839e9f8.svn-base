<?xml version="1.0" encoding="UTF-8"?>
<queries>
    <!--- 记住表的最后不能加分号（;）,否则spark程序会抛出异常 -->
    <!--- 不用添加DROP TABLE IF EXISTS table，程序代码会自动执行 -->
    <hql schema="dw" tableName="fact_receiving" discription="入库单事实表">
        CREATE TABLE IF NOT EXISTS dw.fact_receiving (
        sm_key bigint,
        transit_warehouse_key bigint,
        warehouse_key bigint,
        to_warehouse_key bigint,
        customer_key bigint,
        receiving_id int,
        receiving_sm_id int,
        receiving_sm_code string,
        receiving_code string,
        receiving_tracking_number string,
        receiving_shipping_method string,
        receiving_income_type tinyint,
        receiving_income_type_val string,
        receiving_po_code string,
        receiving_reference_no string,
        receiving_transit_warehouse_id int,
        receiving_transit_warehouse_code string,
        receiving_warehouse_id int,
        receiving_warehouse_code string,
        receiving_to_warehouse_id int,
        receiving_to_warehouse_code string,
        receiving_supplier_id int,
        receiving_update_user int,
        receiving_add_user int,
        receiving_customer_id int,
        receiving_customer_code string,
        receiving_type tinyint,
        receiving_type_val string,
        receiving_status tinyint,
        receiving_status_val string,
        receiving_source_type tinyint,
        receiving_contacter string,
        receiving_contact_phone string,
        receiving_description string,
        receiving_batch int,
        receiving_add_time timestamp,
        receiving_update_time timestamp,
        receiving_total_packages int,
        receiving_expected_date timestamp,
        receiving_transfer_status tinyint,
        receiving_transfer_status_val string,
        receiving_exception tinyint,
        receiving_exception_handle tinyint,
        receiving_abnormal_confirm tinyint,
        receiving_tax_type string,
        receiving_tax_type_val string,
        receiving_insurance_type string,
        receiving_customer_type string,
        receiving_customer_type_val string,
        receiving_wms_qty_confirm tinyint,
        receiving_transit_receiving_code string,
        receiving_sync_owms_status tinyint,
        receiving_sync_owms_status_val string,
        receiving_sync_owms_sign tinyint,
        receiving_sync_owms_sign_val string,
        receiving_sync_owms_time timestamp,
        receiving_check_status tinyint,
        receiving_is_fba tinyint,
        receiving_create_type string,
        receiving_create_type_val string,
        receiving_is_return tinyint,
        receiving_shipping_type tinyint,
        receiving_shipping_type_val string,
        received_packages int,
        receiving_container_number string,
        receiving_first_sign_time timestamp,
        receiving_last_sign_time timestamp,
        receiving_rv_sign_batch smallint,
        receiving_rv_sign_status tinyint,
        receiving_rv_sign_status_val string,
        receiving_rv_timestamp timestamp,
        receiving_volume decimal(10,2),
        receiving_weight decimal(10,2),
        receiving_is_fee_message string,
        receiving_is_fee tinyint,
        receiving_is_fee_val string,
        receiving_is_change_sku tinyint,
        receiving_is_change_sku_val string,
        receiving_is_third tinyint,
        receiving_is_third_val string,
        receiving_take_stock_code string,
        receiving_vat_number string,
        receiving_exemption_number string,
        receiving_eori string,
        receiving_auditing_user_id int,
        receiving_auditing_user_name string,
        receiving_reject_content string,
        receiving_auditing_time timestamp,
        receiving_vat_status tinyint,
        receiving_vat_status_val string,
        receiving_c88_path string,
        receiving_is_cost_fee tinyint,
        receiving_is_cost_fee_val string,
        receiving_reference_code string,
        receiving_box_total int,
        receiving_sku_total int,
        receiving_sku_species int,
        receiving_is_send_email tinyint,
        receiving_is_send_email_val string,
        receiving_email_result tinyint,
        receiving_email_result_val string,
        receiving_is_diff tinyint,
        receiving_is_diff_val string,
        receiving_diff_first_time timestamp,
        receiving_diff_sure_time timestamp,
        receiving_diff_sure_status tinyint,
        receiving_diff_sure_status_val string,
        receiving_country_code string,
        receiving_state string,
        receiving_city string,
        receiving_district string,
        receiving_street string,
        receiving_audited_time timestamp,
        receiving_deliveried_time timestamp,
        receiving_shelved_time timestamp,
        receiving_file_status tinyint,
        receiving_file_status_val string,
        receiving_wp_code string,
        receiving_update_mark string,
        receiving_transit_type tinyint,
        receiving_refercence_form_id string,
        receiving_ie_port string,
        receiving_form_type string,
        receiving_traf_name string,
        receiving_wrap_type string,
        receiving_pack_no smallint,
        receiving_traf_mode string,
        receiving_trade_mode string,
        receiving_trans_mode string,
        receiving_conta_id string,
        receiving_conta_model string,
        receiving_conta_wt decimal(8,2),
        receiving_haveconta tinyint,
        receiving_eda_date timestamp,
        receiving_region_0 int,
        receiving_region_1 int,
        receiving_region_2 int,
        receiving_date_release timestamp,
        receiving_new_add_sku_species int
        )
        COMMENT 'DW层：入库单事实表'
        PARTITIONED BY (month STRING)
        STORED AS PARQUET
        TBLPROPERTIES('parquet.compression'='SNAPPY')
    </hql>
    <hql schema="dw" tableName="fact_receiving_batch" discription="入库单批次事实表">
        CREATE TABLE IF NOT EXISTS dw.fact_receiving_batch (
        sm_key bigint,
        warehouse_key bigint,
        transit_warehouse_key bigint,
        customer_key bigint,
        to_warehouse_key bigint,
        receiving_key bigint,
        product_key bigint,
        rcb_rdb_id int,
        rcb_receiving_id int,
        rcb_qc_code string,
        rcb_receiving_code string,
        rcb_receiving_line_no smallint,
        rcb_product_barcode string,
        rcb_product_id int,
        rcb_rdb_weight decimal(10,3),
        rcb_rdb_putaway_qty smallint,
        rcb_rdb_received_qty smallint,
        rcb_packaged tinyint,
        rcb_non_packaged_qty smallint,
        rcb_labeled tinyint,
        rcb_non_labeled_qty smallint,
        rcb_rdb_note string,
        rcb_receiving_user_id int,
        rcb_rdb_add_time timestamp,
        rcb_rdb_update_time timestamp,
        rcb_box_no string,
        rcb_batch string,
        rcb_received_time timestamp,
        rcb_received_user_name string,
        rcb_received_user_code string,
        rcb_product_real_length decimal(10,2),
        rcb_product_real_width decimal(10,2),
        rcb_product_real_height decimal(10,2),
        rcb_product_real_weight decimal(10,3)
        )
        COMMENT 'DW层：入库单批次事实表'
        PARTITIONED BY (month STRING)
        STORED AS PARQUET
        TBLPROPERTIES('parquet.compression'='SNAPPY')
    </hql>
    <hql schema="dw" tableName="fact_receiving_box" discription="入库装箱事实表">
        CREATE TABLE IF NOT EXISTS dw.fact_receiving_box (
        receiving_key bigint,
        sm_key bigint,
        warehouse_key bigint,
        transit_warehouse_key bigint,
        customer_key bigint,
        to_warehouse_key bigint,
        rb_id int,
        rb_warehouse_id int,
        rb_warehouse_code string,
        rb_receiving_id int,
        rb_receiving_code string,
        rb_box_no string,
        rb_box_number smallint,
        rb_transfer_status tinyint,
        rb_transfer_status_val string,
        rb_receiving_user_id int,
        rb_check_in_user_id int,
        rb_check_out_user_id int,
        rb_received_time timestamp,
        rb_storage_time timestamp,
        rb_delivery_time timestamp,
        rb_update_time timestamp,
        rb_box_length decimal(10,2),
        rb_box_width decimal(10,2),
        rb_box_height decimal(10,2),
        rb_box_weight decimal(10,2),
        rb_box_status tinyint,
        rb_reference_box_no string,
        rb_sign_status tinyint,
        rb_sign_status_val string,
        rb_sign_batch smallint,
        rb_sign_time timestamp,
        rb_sign_user_id int,
        rb_is_new_add tinyint,
        rb_is_new_add_val string,
        rb_timestamp timestamp,
        rb_stock_code string,
        rb_sign_user string
        )
        COMMENT 'DW层：入库装箱事实表'
        PARTITIONED BY (month STRING)
        STORED AS PARQUET
        TBLPROPERTIES('parquet.compression'='SNAPPY')
    </hql>
    <hql schema="dw" tableName="fact_receiving_box_detail" discription="入库装箱明细事实表">
        CREATE TABLE IF NOT EXISTS dw.fact_receiving_box_detail (
        product_key bigint,
        warehouse_key bigint,
        rbd_id int,
        rbd_rb_id int,
        rbd_product_id int,
        rbd_product_barcode string,
        rbd_receiving_id int,
        rbd_receiving_code string,
        rbd_warehouse_code string,
        rbd_quantity int,
        rbd_received_qty int,
        rbd_putaway_qty int,
        rbd_status tinyint,
        rbd_status_val string,
        rbd_package_type string,
        rbd_product_package_type string,
        rbd_fba_product_code string,
        rbd_is_new_add tinyint,
        rbd_is_new_add_val string,
        rbd_add_new_box_quantity int,
        rbd_receiving_width decimal(5,2),
        rbd_receiving_height decimal(10,2),
        rbd_receiving_length decimal(10,2),
        rbd_receiving_weight decimal(10,3),
        rbd_received_weight decimal(10,3),
        rbd_received_length decimal(10,2),
        rbd_received_width decimal(5,2),
        rbd_received_height decimal(10,2),
        rbd_valid_date timestamp,
        rbd_rbx_timestamp timestamp
        )COMMENT 'DW层：入库装箱明细事实表'
        STORED AS PARQUET TBLPROPERTIES('parquet.compression'='SNAPPY')
    </hql>
    <hql schema="dw" tableName="fact_receiving_detail" discription="收货明细事实表">
        CREATE TABLE IF NOT EXISTS dw.fact_receiving_detail (
        product_key bigint,
        warehouse_key bigint,
        to_warehouse_key bigint,
        transit_warehouse_key bigint,
        customer_key bigint,
        rd_id int,
        rd_rdc_id int,
        rd_supplier_id int,
        rd_receiving_id int,
        rd_receiving_code string,
        rd_sm_code string,
        rd_transfer_status tinyint,
        rd_receiving_line_no int,
        rd_status tinyint,
        rd_status_val string,
        rd_receiving_exception tinyint,
        rd_receiving_exception_handle tinyint,
        rd_exception_process_instruction tinyint,
        rd_product_id int,
        rd_product_sku string,
        rd_product_barcode string,
        rd_warehouse_code string,
        rd_to_warehouse_code string,
        rd_transit_warehouse_code string,
        rd_customer_code string,
        rd_receiving_qty int,
        rd_rb_add_quantity int,
        rd_putaway_qty int,
        rd_received_qty int,
        rd_delivery_qty int,
        rd_is_qc tinyint,
        rd_is_qc_val string,
        rd_is_priority tinyint,
        rd_is_priority_val string,
        rd_is_need_dev_photo tinyint,
        rd_is_need_dev_desc tinyint,
        rd_note string,
        rd_product_package_type string,
        rd_box_no smallint,
        rd_package_type string,
        rd_value_added_type string,
        rd_line_weight decimal(10,3),
        rd_fba_product_code string,
        rd_reference_box_no string,
        rd_is_new_add tinyint,
        rd_is_new_add_val string,
        rd_box_number smallint,
        rd_add_new_box_quantity int,
        rd_valid_date timestamp,
        rd_timestamp timestamp,
        rd_add_time timestamp,
        rd_update_time timestamp
        )COMMENT 'DW层：收货明细事实表'
        partitioned by(month string)
        STORED AS PARQUET TBLPROPERTIES('parquet.compression'='SNAPPY')
    </hql>
    <hql schema="dw" tableName="fact_receiving_log" discription="收货日志事实表">
        CREATE TABLE IF NOT EXISTS dw.fact_receiving_log (
        sm_key bigint,
        warehouse_key bigint,
        transit_warehouse_key bigint,
        customer_key bigint,
        to_warehouse_key bigint,
        receiving_key bigint,
        user_key bigint,
        rl_id int,
        rl_receiving_id int,
        rl_receiving_code string,
        rl_type tinyint,
        rl_user_name string,
        rl_user_code string,
        rl_status_from tinyint,
        rl_status_to tinyint,
        rl_note string,
        rl_add_time timestamp,
        rl_ip string,
        rl_content string,
        rl_user_id int,
        rl_customer_code string
        )
        COMMENT 'DW层：收货日志事实表'
        PARTITIONED BY (month STRING)
        STORED AS PARQUET
        TBLPROPERTIES('parquet.compression'='SNAPPY')
    </hql>
    <hql schema="dw" tableName="fact_putaway" discription="上架事实表">
        CREATE TABLE IF NOT EXISTS dw.fact_putaway (
        warehouse_key bigint,
        putaway_id int,
        putaway_code string,
        putaway_receiving_code string,
        putaway_warehouse_id int,
        putaway_warehouse_code string,
        putaway_note string,
        putaway_add_time timestamp,
        putaway_update_time timestamp,
        putaway_transit_receiving_code string,
        putaway_pa_timestamp timestamp
        ) COMMENT 'DW层：上架事实表'
        partitioned by(month string)
        STORED AS PARQUET TBLPROPERTIES('parquet.compression' = 'SNAPPY')
    </hql>
    <hql schema="dw" tableName="fact_putaway_detail" discription="上架明细事实表">
        CREATE TABLE IF NOT EXISTS dw.fact_putaway_detail (
        product_key bigint,
        warehouse_key bigint,
        customer_key bigint,
        pd_id int,
        pd_putaway_id int,
        pd_qc_code string,
        pd_box_code string,
        pd_putaway_code string,
        pd_receiving_code string,
        pd_lc_code string,
        pd_type tinyint,
        pd_type_val string,
        pd_product_id int,
        pd_product_barcode string,
        pd_customer_code string,
        pd_rd_id int,
        pd_quantity int,
        pd_lot_number int,
        pd_warehouse_id int,
        pd_warehouse_code string,
        pd_note string,
        pd_status tinyint,
        pd_status_val string,
        pd_putaway_user_id int,
        pd_transit_receiving_code string,
        pd_inventory_type tinyint,
        pd_inventory_type_val string,
        pd_putaway_time timestamp,
        pd_timestamp timestamp,
        pd_add_time timestamp,
        pd_update_time timestamp
        ) COMMENT 'DW层：上架明细事实表'
        partitioned by(month string)
        STORED AS PARQUET TBLPROPERTIES('parquet.compression' = 'SNAPPY')
    </hql>
    <hql schema="dw" tableName="fact_quality_control" discription="质检表（入库模块）">
        CREATE TABLE IF NOT EXISTS dw.fact_quality_control (
        warehouse_key bigint,
        product_key bigint,
        customer_key bigint,
        qc_id Int,
        qc_code String,
        qc_reference_no String,
        qc_rd_id Int,
        qc_receiving_id Int,
        qc_warehouse_id Int,
        qc_receiving_code String,
        qc_product_barcode String,
        qc_type Int,
        qc_type_val string,
        qc_product_id Int,
        qc_customer_code String,
        qc_customer_id Int,
        qc_receiving_user_id Int,
        qc_operator_id Int,
        qc_quantity Int,
        qc_received_quantity Int,
        qc_quantity_sellable Int,
        qc_quantity_unsellable Int,
        qc_delivery_quantity Int,
        qc_status Int,
        qc_status_val string,
        qc_abnormal_status Int,
        qc_abnormal_status_val string,
        qc_lc_code String,
        qc_note String,
        qc_finish_time Timestamp,
        qc_add_time Timestamp,
        qc_update_time Timestamp,
        qc_timestamp Timestamp
        ) COMMENT 'DW层：质检表（入库模块）'
        partitioned by(month string)
        STORED AS PARQUET TBLPROPERTIES('parquet.compression' = 'SNAPPY')
    </hql>

</queries>

