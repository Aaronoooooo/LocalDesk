<?xml version="1.0" encoding="UTF-8"?>
<queries>
    <!--- 记住表的最后不能加分号（;）,否则spark程序会抛出异常 -->
    <!--- 不用添加DROP TABLE IF EXISTS table，程序代码会自动执行 -->
    <hql schema="dw" tableName="fact_oms_orders" discription="gc_oms订单事实表">
        CREATE TABLE if NOT EXISTS dw.fact_oms_orders(
        company_key string,
        warhouse_key string,
        sm_key string,
        order_id int,
        order_platform string,
        order_customer_id int,
        order_company_code string,
        order_type string,
        order_type_val string,
        order_create_type string,
        order_create_type_val string,
        order_status int,
        order_status_val string,
        order_sub_status int,
        order_sub_status_val string,
        order_cancel_status int,
        order_cancel_status_val string,
        order_create_method int,
        order_shipping_method string,
        order_shipping_method_platform string,
        order_warehouse_id string,
        order_warehouse_code string,
        order_shipping_method_no string,
        order_is_oda int,
        order_is_oda_val string,
        order_oda_type int,
        order_is_signature int,
        order_is_signature_val string,
        order_is_insurance int,
        order_is_insurance_val string,
        order_insurance_value decimal(10,3),
        order_weight decimal(10,4),
        order_desc string,
        order_date_create timestamp,
        order_date_release timestamp,
        order_date_pickup timestamp,
        order_date_warehouse_shipping timestamp,
        order_date_last_modify timestamp,
        order_refrence_no string,
        order_refrence_no_platform string,
        order_refrence_no_sys string,
        order_refrence_no_warehouse string,
        order_shipping_address_id int,
        order_operator_id string,
        order_operator_note string,
        order_sync_status string,
        order_sync_time timestamp,
        order_date_create_platform timestamp,
        order_date_paid_platform timestamp,
        order_date_paid_int int,
        order_amountpaid decimal(10,3),
        order_subtotal decimal(20,3),
        order_ship_fee decimal(20,3),
        order_platform_fee decimal(20,3),
        order_finalvaluefee decimal(20,3),
        order_delivery_fee decimal(12,3),
        order_currency string,
        order_user_account string,
        order_buyer_id string,
        order_third_part_ship int,
        order_is_merge int,
        order_site string,
        order_abnormal_type int,
        order_abnormal_type_val string,
        order_abnormal_reason string,
        order_abnormal_reason_val string,
        order_is_one_piece int,
        order_is_one_piece_val string,
        order_product_count int,
        order_consignee_country string,
        order_buyer_name string,
        order_buyer_mail string,
        order_has_buyer_note int,
        order_fulfillment_channel string,
        order_ship_service_level string,
        order_shipment_service_level_category string,
        order_leave_comment string,
        order_ebay_case_type string,
        order_refund string,
        order_process_again string,
        order_has_export int,
        order_has_pickup int,
        order_has_print_pickup_label int,
        order_service_status int,
        order_service_provider string,
        order_ot_id int,
        order_sys_tips string,
        order_consignee_name string,
        order_consignee_company string,
        order_consignee_street1 string,
        order_consignee_street2 string,
        order_consignee_street3 string,
        order_consignee_district string,
        order_consignee_county string,
        order_consignee_city string,
        order_consignee_state string,
        order_consignee_country_code string,
        order_consignee_country_name string,
        order_consignee_phone string,
        order_consignee_email string,
        order_consignee_postal_code string,
        order_consignee_doorplate string,
        order_shared_sign int,
        order_is_returns int,
        order_is_returns_val string,
        order_is_shipping_method_not_allow_update int,
        order_is_shipping_method_not_allow_update_val string,
        order_is_fba int,
        order_is_fba_val string,
        order_consignee_is_residential int,
        order_is_more_box int,
        order_is_more_box_val string,
        order_is_attachment int,
        order_is_attachment_val string,
        order_so_length decimal(10,2),
        order_o_timestamp timestamp,
        order_so_width decimal(10,2),
        order_so_height decimal(10,2),
        order_age_detection int,
        order_payment_time timestamp,
        order_is_recommend int,
        order_is_recommend_val string,
        order_is_truck_service int,
        order_is_truck_service_val string,
        order_new_order_type int,
        order_new_order_type_val string,
        order_design_batch_status int,
        order_design_batch_status_val string)
        partitioned by(month string)STORED AS PARQUET TBLPROPERTIES('parquet.compression'='SNAPPY')
    </hql>

    <hql schema="dw" tableName="fact_orders" discription="订单事实表">
        CREATE TABLE if NOT EXISTS dw.fact_orders(
        customer_key string,
        warehouse_key string,
        to_warehouse_key string,
        sm_key string,
        order_id string,
        order_code string,
        order_reference_no string,
        order_customer_id int,
        order_customer_code string,
        order_platform string,
        order_platform_type string,
        order_create_type string,
        order_warehouse_id int,
        order_to_warehouse_id int,
        order_is_oda int,
        order_is_oda_val string,
        order_oda_type int,
        order_is_signature int,
        order_is_signature_val string,
        order_is_insurance int,
        order_is_insurance_val string,
        order_insurance_value decimal(10,3),
        order_type int,
        order_type_val string,
        order_country_code string,
        order_sm_code string,
        order_advance_pickup int,
        order_parcel_declared_value decimal(10,2),
        order_shipping_fee_estimate decimal(10,3),
        order_currency_code string,
        order_parcel_contents string,
        order_parcel_quantity int,
        order_status int,
        order_status_val string,
        order_problem_status int,
        order_problem_status_val string,
        order_underreview_status int,
        order_underreview_status_val string,
        order_upload_express_status int,
        order_upload_express_status_val string,
        order_anew_express_status int,
        order_anew_express_status_val string,
        order_intercept_status int,
        order_intercept_status_val string,
        order_sync_cost_status int,
        order_sync_cost_status_val string,
        order_sync_status int,
        order_sync_status_val string,
        order_waiting_status int,
        order_waiting_status_val string,
        order_picking_status int,
        order_picking_status_val string,
        order_charge_status int,
        order_charge_status_val string,
        order_print_sort int,
        order_print_quantity int,
        order_add_time timestamp,
        order_update_time timestamp,
        order_paydate timestamp,
        order_pick_type int,
        order_pick_type_val string,
        order_picking_basket string,
        order_picker_id int,
        order_remark string,
        order_site_id string,
        order_seller_id string,
        order_buyer_id string,
        order_buyer_name string,
        order_buyer_mail string,
        order_sync_service_status int,
        order_sync_count int,
        order_sc_id int,
        order_sync_required_sign int,
        order_sync_wms_status int,
        order_sync_wms_sign int,
        order_sync_wms_time timestamp,
        order_operator_note string,
        order_exception_status int,
        order_exception_status_val string,
        order_exception_type int,
        order_exception_type_val string,
        order_exception_sub_type int,
        order_exception_sub_type_val string,
        order_shared_sign int,
        order_is_residential int,
        order_is_residential_val string,
        order_is_fba int,
        order_is_fba_val string,
        order_outbound_time timestamp,
        order_is_more_box int,
        order_is_more_box_val string,
        order_is_attachment int,
        order_is_attachment_val string,
        order_address_valid_status int,
        order_o_timestamp timestamp,
        order_age_detection int,
        order_payment_time timestamp,
        order_is_recommend int,
        order_is_recommend_val string,
        order_oms_date_create timestamp,
        order_pre_delivery_time timestamp,
        order_sc_currency_code string,
        order_is_flow_volume int,
        order_is_flow_volume_val string,
        order_is_cross_warehouse int,
        order_is_cross_warehouse_val string,
        order_is_truck_service int,
        order_is_truck_service_val string,
        order_new_order_type int,
        order_new_order_type_val string,
        order_design_batch_status int,
        order_design_batch_status_val string
        ) partitioned by(month string)
        STORED AS PARQUET TBLPROPERTIES('parquet.compression'='SNAPPY')
    </hql>

    <!--订单hyy-->
    <hql schema="dw" tableName="fact_order_log" discription="订单日志表">
        CREATE TABLE IF NOT EXISTS dw.fact_order_log (
        warehouse_key string,
        to_warehouse_key string,
        customer_key string,
        sc_key string,
        ol_id Int,
        ol_order_id Int,
        ol_order_code String,
        ol_type Int,
        ol_order_status_from Int,
        ol_order_status_to Int,
        ol_user_id Int,
        ol_ip String,
        ol_comments String,
        ol_add_time Timestamp,
        ol_warehouse_code string
        ) COMMENT 'DW层：订单日志表'
        partitioned by(month string)
        STORED AS PARQUET TBLPROPERTIES('parquet.compression' = 'SNAPPY')
    </hql>
    <hql schema="dw" tableName="fact_order_operation_time" discription="订单操作时间记录表">
        CREATE TABLE IF NOT EXISTS dw.fact_order_operation_time (
        warehouse_key string,
        to_warehouse_key string,
        customer_key string,
        sc_key string,
        oot_id Int,
        oot_order_id Int,
        oot_order_code String,
        oot_cutoff_finish_time Timestamp,
        oot_cutoff_time Timestamp,
        oot_submit_time Timestamp,
        oot_abnormal_time Timestamp,
        oot_process_time Timestamp,
        oot_pack_time Timestamp,
        oot_ship_time Timestamp,
        oot_import_time Timestamp,
        oot_delivered_time Timestamp,
        oot_sync_time Timestamp,
        oot_update_time Timestamp,
        oot_abnormal_user_id Int,
        oot_process_user_id Int,
        oot_pack_user_id Int,
        oot_import_user_id Int,
        oot_ship_user_id Int,
        oot_delivered_user_id Int,
        oot_cutoff_user_id Int,
        oot_cutoff_finish_user_id Int,
        oot_timestamp Timestamp,
        oot_abnormal_deal_time Timestamp,
        oot_abnormal_deal_user_id Int,
        oot_ascan_time Timestamp
        ) COMMENT 'DW层：订单操作时间记录表'
        STORED AS PARQUET TBLPROPERTIES('parquet.compression' = 'SNAPPY')
    </hql>
    <hql schema="dw" tableName="fact_ship_order" discription="订单运输信息表">
        CREATE TABLE IF NOT EXISTS dw.fact_ship_order (
        warehouse_key string,
        to_warehouse_key string,
        customer_key string,
        sc_key string,
        sm_key string,
        so_id Int,
        so_code String,
        so_sc_id Int,
        so_order_id Int,
        so_order_code String,
        so_sp_code String,
        so_service_number String,
        so_tracking_number String,
        so_warehouse_id Int,
        so_pp_barcode String,
        so_sm_id int,
        so_sm_code String,
        so_status Int,
        so_service_provider_weight decimal(10,3),
        so_weight decimal(10,3),
        so_vol_weight decimal(10,3),
        so_length decimal(10,2),
        so_width decimal(10,2),
        so_height decimal(10,2),
        so_declared_value decimal(10,2),
        so_insurance_value decimal(10,2),
        so_tariff_fee decimal(10,2),
        so_shipping_fee decimal(10,2),
        so_currency_code String,
        so_currency_rate decimal(10,4),
        so_add_time Timestamp,
        so_ship_time Timestamp,
        so_delivered_time Timestamp,
        so_update_time Timestamp,
        so_timestamp Timestamp
        ) COMMENT 'DW层：订单运输信息表'
        partitioned by(month string)
        STORED AS PARQUET TBLPROPERTIES('parquet.compression' = 'SNAPPY')
    </hql>

    <hql schema="dw" tableName="fact_order_address_book" discription="订单地址信息表">
        CREATE TABLE IF NOT EXISTS dw.fact_order_address_book (
        country_key string,
        oab_id Int,
        oab_order_id Int,
        oab_order_code String,
        oab_firstname String,
        oab_lastname String,
        oab_company String,
        oab_country_id Int,
        oab_country_code string,
        oab_zone_id Int,
        oab_postcode String,
        oab_state String,
        oab_city String,
        oab_suburb String,
        oab_street_address1 String,
        oab_street_address2 String,
        oab_doorplate String,
        oab_phone String,
        oab_cell_phone String,
        oab_fax String,
        oab_email String,
        oab_note String,
        oab_update_time Timestamp,
        oab_address_validate_token String
        ) COMMENT 'DW层：订单地址信息表'
        STORED AS PARQUET TBLPROPERTIES('parquet.compression' = 'SNAPPY')
    </hql>

    <hql schema="dw" tableName="fact_order_product" discription="订单产品事实表">
        create table IF NOT EXISTS dw.fact_order_product (
          order_key string,
          customer_key string,
          warehouse_key string,
          to_warehouse_key string,
          sm_key string,
          product_key string,
          op_id int,
          op_order_id int,
          op_order_code   string,
          op_product_id int,
          op_product_barcode  string,
          op_quantity int,
          op_final_value_fee  decimal(10,3),
          op_paypal_fee decimal(10,3),
          op_sales_price  decimal(10,3),
          op_category int,
          op_recv_account   string,
          op_ref_tnx  string,
          op_ref_item_id  string,
          op_ref_buyer_id string,
          op_record_id  string,
          op_ref_paydate  timestamp,
          op_add_time timestamp,
          op_update_time  timestamp,
          op_shared_sign  int,
          op_shared_unit_price  decimal(10,2),
          op_fba_product_code   string,
          op_order_product_declared_value decimal(10,2),
          op_length decimal(10,2),
          op_width  decimal(5,2),
          op_height decimal(10,2),
          op_weight decimal(10,3),
          op_timestamp  timestamp,
          op_sc_declared_value  decimal(10,2)
        )
        COMMENT '订单产品表'
        PARTITIONED BY (month STRING)
        STORED AS PARQUET TBLPROPERTIES('parquet.compression'='SNAPPY')
    </hql>

    <hql schema="dw" tableName="fact_order_physical" discription="订单物理仓库事实表">
        create table IF NOT EXISTS dw.fact_order_physical (
          order_key string,
          customer_key string,
          warehouse_key string,
          to_warehouse_key string,
          sm_key string,
          opr_id int,
          opr_wp_code string,
          opr_order_code string
        )
        COMMENT 'dw.fact_order_physical：订单物理仓库表'
        PARTITIONED BY (month STRING)
        STORED AS PARQUET
        TBLPROPERTIES('parquet.compression'='SNAPPY');
    </hql>

    <hql schema="dw" tableName="fact_order_product_physical" discription="订单产品物理仓库表">
        create table IF NOT EXISTS dw.fact_order_product_physical (
          product_key string,
          op_key string,
          oppr_id int,
          oppr_order_code string,
          oppr_product_barcode string,
          oppr_wp_code string,
          oppr_occupy_quantity int,
          oppr_product_id int,
          oppr_op_id int
        )
        COMMENT '订单产品物理仓库表'
        PARTITIONED BY (month STRING)
        STORED AS PARQUET TBLPROPERTIES('parquet.compression'='SNAPPY');

    </hql>

    <hql schema="dw" tableName="fact_oversea_abnormal_order" discription="问题件事实表">
        CREATE TABLE IF NOT EXISTS dw.fact_oversea_abnormal_order (
          customer_key string,
          warehouse_key string,
          sm_key string,
          sc_key string,
          order_id int,
          order_platform string,
          order_platform_type string,
          order_create_type string,
          order_code string,
          order_reference_no string,
          order_tracking_number string,
          order_type string,
          order_type_val string,
          order_status string,
          order_status_val string,
          order_customer_code string,
          order_warehouse_code string,
          order_sm_code string,
          order_sc_code string,
          order_parcel_quantity int,
          order_pick_type string,
          order_pick_type_val string,
          order_pick_user_id int,
          order_country_code string,
          order_buyer_firstname string,
          order_buyer_lastname string,
          order_buyer_company string,
          order_exception_sub_type string,
          order_exception_status string,
          order_exception_status_val string,
          order_add_time timestamp,
          order_update_time timestamp,
          order_oot_update_time timestamp,
          order_print_time timestamp,
          order_pack_time timestamp,
          order_abnormal_time timestamp,
          order_abnormal_deal_time timestamp,
          order_print_user_id int,
          order_pack_user_id int,
          order_abnormal_user_id int,
          order_abnormal_deal_user_id int
        )
        COMMENT '问题件表'
        PARTITIONED BY (month STRING)
        STORED AS PARQUET TBLPROPERTIES('parquet.compression'='SNAPPY');
    </hql>

</queries>

